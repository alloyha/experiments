[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hil-agent-system"
version = "0.1.0"
description = "Production-Ready AI Workflow Orchestration"
authors = [{name = "Your Team", email = "team@company.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Build configuration - specify that the package is in the 'app' directory
[tool.hatch.build.targets.wheel]
packages = ["app"]

dependencies = [
    # Core Framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Database & Caching
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.23",
    "sqlmodel>=0.0.16",
    "alembic>=1.13.0",
    "redis>=5.0.1",
    "psycopg2-binary>=2.9.9",

    # Vector Database
    "pgvector>=0.2.4",

    # LLM Providers
    "openai>=1.3.0",
    "anthropic>=0.7.0",

    # Tool Integration
    "composio-core>=0.3.0",
    "composio-openai>=0.3.0",

    # HTTP & Async
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",

    # Templating & Data
    "jinja2>=3.1.2",
    "pyyaml>=6.0.1",
    "python-multipart>=0.0.6",

    # Security & Auth
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",

    # Observability
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",

    # Workflow & Task Management
    "celery>=5.3.4",
    "networkx>=3.2.1",

    # Utilities
    "tenacity>=8.2.3",
    "click>=8.1.7",
    "rich>=13.7.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "radon>=6.0.1",
    "vulture>=2.10",
    "flake8>=6.0.0",
    "uvicorn[standard]>=0.23.0",
    "watchdog>=3.0.0",
    "pre-commit>=3.4.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    "alembic>=1.12.0",
    "sqlalchemy-utils>=0.41.0",
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
    "line-profiler>=4.1.0",
    "ipdb>=0.13.13",
    "rich>=13.5.0",
    "icecream>=2.1.3",
    "build>=0.10.0",
    "twine>=4.0.2",
    "wheel>=0.41.0",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
]

[project.scripts]
hil-server = "app.main:main"

[tool.poetry.group.dev.dependencies]
# Ruff configuration for HIL Agent System
[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"
fix = true
extend-include = ["*.ipynb"]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".mypy_cache",
    ".nox", ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules",
    "venv", "migrations",
]

[tool.ruff.lint]
select = [
    "E", "W",     # pycodestyle
    "F",          # Pyflakes
    "UP",         # pyupgrade
    "B",          # flake8-bugbear
    "SIM",        # flake8-simplify
    "I",          # isort
    "N",          # pep8-naming
    "C",          # mccabe
    "S",          # bandit
    "T20",        # flake8-print
    "PT",         # flake8-pytest-style
    "Q",          # flake8-quotes
    "RET",        # flake8-return
    "TID",        # flake8-tidy-imports
    "ICN",        # flake8-import-conventions
    "TCH",        # flake8-type-checking
    "PIE",        # flake8-pie
    "PYI",        # flake8-pyi
    "RSE",        # flake8-raise
    "SLF",        # flake8-self
    "ERA",        # eradicate
    "PL",         # Pylint
    "PERF",       # Perflint
    "RUF",        # Ruff-specific
]

ignore = [
    "E501",    # Line too long (handled by formatter)
    "E203",    # Whitespace before ':' (conflicts with Black)
    "S101",    # Use of assert (OK in tests)
    "S104",    # Hardcoded bind all interfaces
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "B008",    # Function calls in argument defaults (FastAPI)
    "RUF012",  # Mutable class attributes
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
unfixable = ["ERA001", "F401", "F841"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "PLR2004", "S106", "S608", "PT011"]
"conftest.py" = ["F401"]
"__init__.py" = ["F401"]
"migrations/**/*.py" = ["ALL"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["app"]
known-third-party = ["fastapi", "pydantic", "sqlalchemy", "pytest"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
force-wrap-aliases = true
split-on-trailing-comma = true

[tool.ruff.lint.pylint]
max-args = 8
max-locals = 20
max-branches = 15
max-statements = 60

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--cov=app --cov-report=html --cov-report=term-missing"